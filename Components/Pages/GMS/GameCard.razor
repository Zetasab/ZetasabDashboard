@using System.Text.Json
@using System.Globalization

<div class="game-container">
    
    <div class="game-container-img-container" >
        <img @onclick="NavigateToGame" onmouseover="startTimer(@item.Id,@JsonSerializer.Serialize(
                                                                                                  item.ShortScreenshots?
                                                                                                      .Select(p => p.Image)
                                                                                                       .Skip(1)
                                                                                                      .Where(u => !string.IsNullOrWhiteSpace(u))
                                                                                                      .Distinct()
                                                                                                      .ToList()
                                                                                                      ?? new List<string>()))"
             onmouseleave="stopTimer(@item.Id,'@item.BackgroundImage')" src="@item.BackgroundImage" id="@item.Id" class="game-container-img" onerror="this.onerror=null; this.src='https://static.vecteezy.com/system/resources/previews/004/141/669/non_2x/no-photo-or-blank-image-icon-loading-images-or-missing-image-mark-image-not-available-or-image-coming-soon-sign-simple-nature-silhouette-in-frame-isolated-illustration-vector.jpg';" />

        <div class="game-container-date">
            @if (item.Released != null)
            {
                <text> 📅 @DateTime.ParseExact(item.Released, "yyyy-MM-dd", CultureInfo.InvariantCulture).ToString("dd MMM yyyy", new CultureInfo("es-ES"))</text>
            }
       </div>

        <div class="game-container-added">
            @item.Added   añadieron este juego
        </div>

        @if (ShowButtons)
        {
            @if (CService.CheckIfPermissions(LoggedUser, ThisPageEdit))
            {
                <div class="game-container-actions">
                    <div class="game-container-actions-div"></div>
                    <div class="game-container-actions-div">
                        <!-- Visto -->
                        @if (PlayedGames.Any(x => x.Id == item.Id))
                        {
                            <MudTooltip Text="Desmarcar como jugado">
                                <MudIconButton Icon="@Icons.Material.Filled.CheckCircle"
                                               Color="Color.Success"
                                               OnClick="@(() => UnMarkAsPlayed(item))" />
                            </MudTooltip>
                        }
                        else
                        {
                            <MudTooltip Text="Marcar como jugado">
                                <MudIconButton Icon="@Icons.Material.Outlined.CheckCircleOutline"
                                               Color="Color.Success"
                                               OnClick="@(() => MarkAsPlayed(item))" />
                            </MudTooltip>
                        }
                        
                    </div>

                    <div class="game-container-actions-div">
                        <!-- Añadir a favoritos -->
                        @if (LikedGames.Any(x => x.Id == item.Id))
                        {
                            <MudTooltip Text="Quitar de Favoritos">
                                <MudIconButton Icon="@Icons.Material.Filled.Favorite"
                                Color="Color.Secondary"
                                OnClick="@(() => UnMarkAsLiked(item))" />
                            </MudTooltip>
                        }
                        else
                        {
                            <MudTooltip Text="Añadir a Favoritos">
                                <MudIconButton Icon="@Icons.Material.Outlined.FavoriteBorder"
                                Color="Color.Secondary"
                                OnClick="@(() => MarkAsLiked(item))" />
                            </MudTooltip>
                        }
                        
                    </div>
                    <div class="game-container-actions-div">

                        <!-- Watchlist -->
                        @if (WatchedGames.Any(x => x.Id == item.Id))
                        {
                            <MudTooltip Text="Quitar de previsto">
                                <MudIconButton Icon="@Icons.Material.Filled.Bookmark"
                                               Color="@(item.Priority ? Color.Secondary : Color.Primary)"
                                               OnClick="@(() => UnMarkAsWatch(item))"  />
                            </MudTooltip>
                        }
                        else
                        {
                            <MudTooltip Text="Añadir a previsto">
                                <MudIconButton Icon="@Icons.Material.Outlined.BookmarkBorder"
                                               Color="@(item.Priority ? Color.Secondary : Color.Primary)"
                                               @onmousedown="@(e => StartPress(item))"
                                               @onmouseup="@(e => EndPress(item))"
                                               @ontouchstart="@(e => StartPress(item))"
                                               @ontouchend="@(e => EndPress(item))"
                                               @onmouseleave="@(e => CancelPress())" />
                            </MudTooltip>
                        }
                    </div>
                    <div class="game-container-actions-div"></div>

                </div>
            }
        }
    </div>
    <div class="game-container-title">
        <div style="width: 100%;position: relative;overflow:hidden;">
            @item.Name
        </div>
        <div style="position:absolute;right: 0;margin-right: 48px;">
            <div class="movie-score">
                <MudProgressCircular Size="Size.Medium"
                                        Value="@(item.Rating * 20)"
                                        Color="@GetScoreColor(item.Rating)"
                                        StrokeWidth="6" />
                <span class="movie-score-text">@((int)(item.Rating * 20))</span>
            </div>

        </div>
    </div>
</div>


        